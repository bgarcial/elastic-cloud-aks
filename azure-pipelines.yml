# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- staging

pool:
  vmImage: ubuntu-latest



steps:
- script: |
    az login --service-principal --username $(ARM_CLIENT_ID) --password $(ARM_CLIENT_SECRET) --tenant $(ARM_TENANT_ID)
  displayName: 'Authenticating to Azure'
 
- task: terraformInstaller@0
  inputs:
    terraformVersion: '1.0.9'
  displayName: Install Terraform

- script: |
    ls 
    pwd
    cd terraform
    ls
  displayName: Placing terraform directory path 

- task: TerraformCLI@0
  displayName: 'Check terraform version'
  inputs:
    command: version


- task: TerraformCLI@0
  displayName: 'Initializing Terraform'
  inputs:
    command: init
    workingDirectory: /home/vsts/work/1/s/terraform 
    backendType: azurerm
    backendServiceArm: 'Azure Personal Tenant'
    backendAzureRmResourceGroupName: 'pfc-terraform-envs-states'
    backendAzureRmResourceGroupLocation: 'westeurope'
    backendAzureRmStorageAccountName: 'pfcterraformstates'
    backendAzureRmContainerName: 'pfcterraformstates'
    backendAzureRmKey: staging.terraform.tfstate


- task: TerraformCLI@0
  displayName: 'Terraform validate'
  inputs:
    command: validate
    workingDirectory: /home/vsts/work/1/s/terraform

- task: TerraformCLI@0
  displayName: 'Terraform format'
  inputs:
    command: fmt 
    workingDirectory: /home/vsts/work/1/s/terraform